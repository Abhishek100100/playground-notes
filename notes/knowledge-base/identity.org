* Identity

** What is identity?

- It is an association of something that user has or know, between the user
  itself. First user authenticates to the service, with a provided credentials
  (in most cases - user name and password). Then, he is authorized - based on
  his identity, into which actions he can do or he can't do.

** Authentication

- Process of verifying something that user knows or has and provides to the
  service, and returning a unique, time-bound way of verifying that user is
  properly authenticated to the service.

** Authorization

- Process of verifying what certain authenticated (or not) identity can do or
  can't. It is often bound to concepts like capabilities, claims, scopes, rights
  etc.

** Identity Providers

*** OpenID

- It is an old standard for providing identity and authentication mechanism.
- It was a good standard, however it had one usability issue - user needs to
  remember URL of the authentication service.

*** OpenID Connect

- It is an authentication and authorization mechanism, built on top of *OAuth
  2.0*, with some additional elements added to standard (like enforcement of
  authentication, standardizing certain ways of signing and verifying provided
  tokens, defined and standardized OAuth scopes).
- It is used by e.g. *Microsoft*, *Google* and *Facebook*.

** Authorization Servers

*** OAuth

- Framework (in various places under specified - e.g. do not require any kind of
  authentication, scopes are not well defined), which describes flow between
  servers.
- Current version is *OAuth 2.0*.
- It should be used mostly for authorizing existing user, which was
  authenticated in a different way earlier, when it comes to access for an API or
  application.

*** What's wrong with OAuth?

- Pure OAuth work flow is often misused and abused as an identity provider.
- People often misuse the result returned due to OAuth process, and treats it as
  a identity provider, where it is not.
