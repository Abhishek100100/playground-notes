* ZeroMQ

** Domains and Use Cases

- Financial (*high volume*).
- Clouds and *PaaS*-like services.
  - Evolution:
    - *RabbitMQ* + *AMQP* -> @#!#$% -> ZeroMQ.
- Mobile (*P2P*).
- Huge Data (e.g. *CERN*).
- *Internet of Things*.

** How to master that?

- 6 months of learning (with using, practical).
- Work with community.
  - *Isolated expert is stupid*.
  - *Expert Beginner* trap.

** Basic Philosophy

In IT, we are not building houses. It is different, we can build
systems in iterative way. First we focus on decomposition into
components, services, layers and then we are focusing on contracts
between them. One step at a time.

Whole broker-less approach is service and architecture friendly
(SOA). Messages and contracts are oriented around binary blobs,
everything is under the hood, you can treat it as an abstraction.
Services are discrete, operations are inevitable, so do not afraid the
microservices thing.

Basically you can start with the simplest concept (mother and father
of everything) called *ROUTER* and *DEALER*, every other abstraction
is built on top of that. And one more important thing - in ZeroMQ
*client* and *server* roles are not explicit.
