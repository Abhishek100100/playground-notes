* Tools

** ZeroMQ

- Connect your code in any language, on any platform.
- Carries messages across inproc, IPC, TCP, TPIC, multicast.
- Smart patterns like pub-sub, push-pull, and router-dealer.
- High-speed asynchronous I/O engines, in a tiny library.
- Backed by a large and active open source community.
- Supports every modern language and platform.
- Build any architecture: centralized, distributed, small, or large.
- Free software with full commercial support.
- There are alternatives which does not require libstdc++.
  - nanomsg (http://nanomsg.org/documentation-zeromq.html)

** Vagrant

*** Tips and Tricks

- Vagrant support multiple provisioning mechanism invoked for one virtual machine.
  - So you are able to e.g. add multiple shell scripts with preserving the run order.

** Operating Systems

*** CoreOS

- https://coreos.com
- Re-architected Linux distribution with kernel-level support for
  Docker and para-virtualization based on `LXC`.
- Very nice, lightweight in terms of memory footprint and cloud optimized.

*** NixOS

** Private Clouds

*** Open Stack

Foundation and project started by NASA and Rackspace almost 4 years ago in order
to provide standardization, tooling, toolkit and roadmap for creating private
clouds infrastructure.

Written mostly in Python, mirrors most common features from third party cloud
providers like RDS, Object Storage, Computing Engines, Networking and Queuing.

Supports Chef / Puppet and puts on automation. It is easily to scale in and scale out.

Development environment can be setup on just one machine via http://devstack.org.

Very popular in corporations which already have infrastructure and don't want to
pay high prices to the companies like VMWare which provides closed sourced solutions.

It is also easier to adjust infrastructure to your needs with open sourced tooling.
