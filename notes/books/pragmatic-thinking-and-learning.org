* Introduction

Software is created in your head.
My comment: so try to not put rubbish into it.

n** Wetware

wetware - (etymology) *wet* + *software*; humorous analogy to the
software and hardware, but applied to the biological areas. It is
a reference to the water found in living creatures.

** Context

Context is the most important thing when learning, talking, applying
newly learned stuff. In other words context is a 'king' and should
taken into consideration always.

The key information about context is related with the paths in the
brains activated by certain actions - typing notes on the computer
and in the notebook with pen and paper have the same output.
However the way and creative process is very different between
these two approaches.

* Dreyfus Model of Skills Acquisition

Dreyfus brothers created very nice model (5 levels)
which applies to the single skill, because you can be
a novice in one skill and expert in the others.

** Beginners vs. Experts

Novices need context-free, exact and precise rules how and what to do
it.  From the other hand experts should have freedom, if we're
applying rules and guidelines they are feeling constrained and they
can't be effective as they experts really are (*unconscious
activities*).

** Levels

*** Novice

- Needs direct and explicit recipes.
- Rules and Commands are key to manage and starting the work.
- You can't define something explicitly with infinite recursion.
- Directions have to well defined, values have to be exact.
- Analogy: *Call Center workers*.

*** Advanced Beginner

- Some rules can be bound, some changed.
- But still have problems with troubleshooting.
- Needs answers fast, problems cause frustration.

*** Competent

- At first glance he is a solid, good worker.
- Experienced enough to solve standard problems.
- Don't afraid to troubleshoot, patiently strive to final answer.
- Delivers solutions, tested and solid.
- Reflection isn't standard thing.
- But it seems that some thoughts are appearing.

*** Proficient

- Efficient worker, solving complex problems related with domain.
- Experience starts to being his huge strength.
- Reflections, thoughts are on daily basis.
- It is a highest possible level for 98% of population.
- Competent, solid, skilled and mindful person.
- Sometimes appearing blinks of intuition.
- Sometimes using an analogies to describe things.

*** Expert

- Guru, authority in certain domain.
- Intuition is a key, they can't describe why something is good / bad.
- 'It just seems wrong' - expert's description of 'Why?'.
- Frustrated with many questions asked by novices and beginners.
- Sometimes they can describe how to do something.
- Things which looks like a magic can't be explained to the rest of
  the world.
- Operating with analogy and anecdotes.
- They are valid and appropriate for expert to explain some things.

** Main problems with acknowledging Dreyfus model

- Constraining experts with rules.
- Throwing out advanced beginners into deep water.
- Overwhelming beginners with pressure and amount of details.
- Exploiting advanced beginners and building false-positive self-esteem.
- The main problem is that Agile Development works well for mixed teams.
  - Not in the teams which is built from novices only.
  - Agile needs auto-reflection and self-guidance.
    - These are available only on the higher levels of Dreyfus scale.
- The main visualization of slowness of rules, is the 'work-to-rule'.
  - The main objective of this strike is following the rules to the
    level of absurd.
- Many people disqualify intuition as a non-scientific method.
  - Experts are using it properly, guides are necessary for beginners.
- Dreyfus skills distribution is not equal to the normal distribution.
  - Most of people are in the advanced beginner level.
  - Experts and Proficient people are the minor.
- "You should know what you don't know".
- Experts != Teachers.
  - In other words it is a different skill in which expert can be
    novice or advanced beginner.

** Evolution from beginner to an expert

- Evolution from the rules to the creative, intuition.
- Change in perception for observing problems.
  - Beginners see list of equal steps composed into problem.
  - Experts see different elements as more important than the others.
    - They're focused on more important things, rest is a trained,
      semi-automatic skill.
- Change in engagement - beginners are passive observers, doers only.
  - Experts are immersed into the problem, they're engaged improvisers.
- The main tools of experts are intuition and pattern matching.
- The easiest way to learn from experts is to mimic them.
  - R&D - Rip off and Duplicate
- Also getting responsibility for your decisions is important.
  - Following orders blindly do not create self-guidance in your
    attitude.
- Very interesting concept is related with "Shu Ha Ri"
  - Shu - Copy, imitate.
  - Ha  - Reflect, guide, learn.
  - Ri  - Transcend, improve, improvise.
- There are no substitutes for experience.
  - But the most important thing in the process is neither position or
    experience.
  - Value which you can introduce matters the most.
- Evolution should be performed in safe environment, with solid
  "timing".
- And most important - Expertise is not permanent - keep practicing to
  remain an expert.
- Individuals > Herd.
  - Individuals are responsible, creative and critique about others.
  - Herd is oriented around formal rules, group
    responsibilities. They're "monkeys".
- Talking about something all the time makes it irrelevant.
- And the most important thing - Dreyfus is only a model, "one side
  does not fit all".
  - Model is a tool, not a mirror.

* Kruger-Dunning Effect

It is an effect observed by two psychologists, which is based on too
high and false self-esteem. Advanced beginners are acting like the
experts, when they are not, because they cannot know better tools and
they do not have enough skills in order to solve the problem
differently and properly.

They have described a case of thief, which thought that pouring lemon
juice on his face and skin will let him be invisible for CCTV
cameras. Obviously, the plan did not work out and he get caught. But
he's an obvious observation that such observed effect exists.

That attitude is common for advanced beginners, especially in software
development.  There are plenty of people that claim that they can do
everything, each time.  However, after they reach certain level, near
to the expertise, they will acknowledge how little they knew before.

* How does your brain work?

** Two processors, one memory bus

First is a linear, reliable, slow and very similar to the *von Neumann*
architecture processor - it is responsible for analytic thinking,
constructing proofs, logical reasoning. It processes all instructions
sequentially step-by-step. It has also implemented an *idle loop*,
sometimes called an internal voice. It uses also relatively small
amount of overall brain real estate.

Second is more like a DSP processor. It is designed to work with
patterns, recognition, creativity, it works like a search engine,
asynchronously. It can run in the background, and results can be
delivered later even possibly days later. It does not use any verbal
processing so the results are not verbal either.

Both are sharing the bus to the memory core. Only one CPU can access
the memory banks at a time. That means that first CPU which does
active *busy loop* can overwhelm the second processor and starve him.
And the other way, if the second processor needs memory for cranking
something up, CPU is blocked.

Both modes are called *R-mode* and *L-mode*. L in *L-mode* stands for
linear, R in *R-mode* means rich, holistic and asynchronous way of
working. *R-mode* is critical for intuition, problem solving, and
creativity. *L-mode* gives you the power to work through the details
and make it happen.

Regarding other metaphors, memory inside our brains is similar to the
volatile dynamic RAM, which needs to be refreshed periodically. In
other words it means that you can lose some of your skills, memories.

This is just a *metaphor*. You should not consider this as a fact and
blindly rely on that. It is much more complicated.

*** L-Mode and R-Mode

Table with features comparison:

|  L-Mode  |   R-Mode     |
|----------+--------------|
| Verbal   | Non-verbal   |
| Analytic | Syntetic     |
| Symbolic | Holistic     |
| Abstract | Spatial      |
| Temporal | Intuitive    |
| Logical  | Concrete     |
| Digital  | Non-rational |
| Linear   | Non-linear   |

Ideally, you should work with both hemispheres - researches done on
topics of splitting connection between them shows that without
connection both are not working properly. For example you should note
everything which your right hemisphere produce, because it has
non-verbal way of communicating results. By writing that down, you are
memorizing the results and stimulating it to produce more frequently
results and learning that it should communicate solutions in this
way. Another example is related with learning you should learn by
analysis and synthesis, in order to engage both of hemispheres
equally.

In our work and culture, we are treating *rich mode* as something
worse. Moreover we are underestimating it pretty heavily. When you
cannot compete with price or better quality, you have to with
aesthetics, and human mind is designed to recognize beauty from
selection.

Yes, from selection - beauty is subjective to the environment and the
context. What is even more important, *R-Mode* cannot work under the
stress and pressure, these two attributes kill the cognition.

You can rewire your brain, and use the other parts to work on the
thing that you need. It is related with your will power and beliefs.

Second think is that you have to do deliberate, practice which will
refresh your skills. It is like dynamic RAM which need to be
refreshed, look at the musicians - they are training all the time.
And once again - you have to learn by synthesis and analysis, in order
to preserve proper health and balance between both modes.

*** Reinforcing R-Mode

If you would try to deliberately ignore *L-Mode* (in drawing exercise
by trying not using a formal names for parts which are you drawing)
*R-Mode* finally will take over and the *flow* feeling will return to
you. Using the right tool to do the right job is crucial in this case.

And one more thing - you should always think about your thoughts, even
if they look silly or peculiar, try to write them down, formalize
them - maybe your *R-Mode* in this case manifested the solution or
another brilliant idea came out of your create hemisphere.

**** Reducing Cognitive Interference

As described above, especially if your background is more scientific,
you are trained to work with *L-Mode* - in this case this *muscle* is
stronger, so it will affect even the typical *R-Mode*
activities.

Example of that can be drawing a symbol of house after asking to draw
a your house. Symbolical meaning manifests from *L-Mode* instead the
*R-Mode*. Drawing is seeing, you should see real things - not the
symbols.

**** Cross Sensory Feedback

Other useful technique to reinforce your *R-Mode* is deal with
multiple feedback channels. When you are doing your typical
activities - like listening on the meeting, try to play with pen,
paper clip - bend it, twirl it, do manual stuff, draw or doodle
something. This will increase amount of brain involved in the actual
activity and enhances your brain capabilities directly.

Do a manual puzzles, work with LEGO, use role playing to work with
requirements and tough design constraints. Engage in the situation as
much senses, conversation styles, feedback channels as you can.
*** Using both modes

Both modes are equally important, you should use and develop both
hemispheres - because without *linear*, *R-Mode* cannot communicate
properly. Without *rich* mode *L-Mode* cannot innovate.

In other words you should *write when drunk, revise when sober*. By
creating safe environment for rich, sensory, cross feedback experience
in order to lead learning (via *R-Mode*), grasp bigger concepts and
then learn more and more details, follow the idea via *L-Mode*. In
this way you are *supercharging* learning process with *R-Mode*.

You can connect both modes by using *metaphors* and
*analogies*. Process of finding new meaning for something is the best
possible way to manifest power of *R-Mode* with *L-Mode* verbal
communication and reliability.

There are couple of problems with metaphores - you need to find really
clear and good one, and that is not so easy in IT-like environments,
because IT is full of misleading and incomprehensible analogies
(e.g. windows, mouse and so on). Second issue is that almost none of
analogies is 100% ideal and do not match every single corner cases,
and you need to remember that. But otherwise - it is a very powerful
technique to connect both modes together and moreover it can be
amplified by using *humor*. Because of that, it can be correlated with
good emotions which definitely increases the transfer and power of
final analogy. Also randomness is really useful, because finding
correlation between two very distant words and meanings can be really
powerful and easy to recall in future (because it is different).

*** Harvesting the R-Mode

Because *rich mode* communicates differently (e.g. via dreams or other
non-verbal channels) we need to adapt and use different techniques to
enforce to appear even the non-visual solutions.

Another thing is related with environment and e.g. breathing, because
it influences thinking.

**** Image Streaming

It is very useful technique - after formulating problem (on the paper,
ideally - offline), you have to close your eyes, relax and describe
every image that your mind is producing, with every single
detail. Even if it already disappeared use the present tense. If you
do not see anything, stimulate the image source - by rubbing your eye
or staring at the light, origin of the source of images is irrelevant.

These details can be related with your solution, and finally it can
have meaning for you, which your mind already is recognizing.

**** "Just Write"

You should start writing down everything, starting from bullet points,
going through sentences to paragraphs. You should be doing it offline,
bewaring that tools can be a distraction for you. Do not criticize,
review, rehash your thoughts, just plainly write them down.

The other version of that is related with writing down 3 pages as a
first thing in the morning. Again, you shouldn't review and rehash it,
just write it down, offline, manually. Your mind is not fully
awakened, so *rich mode* and your subconscious mind can manifest by
your writing skills.

**** Walking

Another technique is related with mindless walk, around the well
known, quiet and peaceful neighbourhood. First you write down
everything that you know, which is related to that hard problem, again
without reviewing it, rehashing it, plain *brain dump* and then you go
to a mindless walk, without focusing on the problem, with no pressure,
no concentration. Just let it go!

Eventually the idea will come to you, and then you can return in front
of your keyboard in order to try it and formalize it with *linear
mode*.
**** Harvesting Patterns

Your *rich mode* has another function different than providing awesome
ideas - pattern matching. For example code is such thing, which is
sensitive to various transformation and reading it multiple times
after writing. In order to read it properly, with actual semantics and
meaning we are using formatting, fonts, comments in order to visually
distinguish it and make it easier to read.

Another way to harvest pattern matching mechanism is using a simple
trick - you can use additional processing power by *reversing* the
problem. So when you are debugging a complex problem, you should
instead prepare 3-4 ways how to provoke that issue, in the creative
process of creating the steps to reproduce we are doing a pattern
match in the background, and finally maybe we *R-Mode* will provide a
clue or even an answer to such problem.

Very nice variant of that technique is one called *oblique strategies*
which are 100 sentences prepared by famous music composers. At first
it looks like a strange question or statement, which reconciles
subconsciously the patterns.

*** Breaking out from rut

You should introduce a fun to your daily activities. Moreover, you
should break and refresh your daily activities, consciously
introducing changes in the daily schema. It creates new neural
connections in the brain.

Another way for breaking out from the habit is the simple play with
neologisms - you should create new words, play with them, be a
child. You should take an example from e.g. Shakespeare which uses the
language very creatively (*Bran Teasers from Shakespeare*).

** Debugging Your Mind

*** Cognitive Biases

Your mind is highly exposed to the influence of couple dozens of
identified and classified *cognitive biases*. They are common
fallacies, illogical situations which compensates your abilities and
learning process. Part of them is related with *linear mode*, part
with self esteem, part with context and your background.

Common biases:

- Anchoring - to something, to some number, this anchoring fixate you
  so hard on that value that you cannot see the context.
- Confirmation bias - you are looking for false acceptation and
  acceptation only.
- Self-serving bias - *my ideas are only the good ones*.
- Need for closure - unfamiliarity hurts, so you need to do something,
  even false-positive to increase your awareness and
  knowledge. Consequences? You are doing *big design upfront* instead
  of adaptive process.
- Fundamental attribution error - Assigning attributes based on
  personality not by context.
- Exposure effect - new is bad, false value of *comfort zone*.
- False Memory - Each read from your memory is actually a destructive
  read which needs a write after. So each read can injure the exact
  information stored in your memory.
- Symbolic Reduction Fallacy - too strong noise produced by *linear
  mode* destroys the rich description of your solution, providing only
  symbolic reasoning and representation.
- Nominal Fallacy - Labeling, huge urge to applying well known labels
  to new solutions and problems.

Moreover there are plenty of other statements related with human mind
e.g.: humans are poor with extrapolating future events from previous
events - *black swan effect*. Another problem is related with
*correlation* and *causation* (first one does not determine the
second) or *platonic fold* (form of *symbolic reduction
fallacy*). Also, we are often using *never* without watching the
outliers.

Other interesting biases:

- Attentional Bias - The tendency of our perception to be affected by
  our recurring thoughts.
- Choice-supportive bias - The tendency to remember one's choices as
  better than they actually were.
- Clustering illusion - The tendency to overestimate the importance of
 small runs, streaks, or clusters in large samples of random data
 (that is, seeing phantom patterns).
- Decoy effect - Preferences for either option A or B changes in favor
  of option B when option C is presented, which is similar to option B
  but in no way better.
- IKEA effect - The tendency for people to place a disproportionately
  high value on objects that they partially assembled themselves, such
  as furniture from IKEA, regardless of the quality of the end result.
- Negativity bias - Psychological phenomenon by which humans have a
  greater recall of unpleasant memories compared with positive
  memories.

*** Generations and Context

You are who you are because the context and your peers from the same
generation, with whom your were educate.

Our generation is called the *millennials* (*generation Y*). We are
loyal, we are valuing more quality then quantity, we are efficient
with technology use (*web was always here*), but also we are less
entrepreneur then previous, *X*, generation. We have got huge
self-esteem.

Working with different types of people increases problems
(e.g. *generation X* irritates pragmatism the *baby boomers*).

Values and emotions affects your decisions. This is not wrong, but it
is a common fallacy to believe that everyone uses the same cognitive
process and will come with the same conclusions after.

*** Personalities

There is a MBTI (Meyer-Briggs Type Indicator) which is based on
C. Jung conceptions about types of people personalities. It uses 4
different features:

- Introvert vs. Extrovert
- iNtuitive vs. Sensing
- Thinking vs. Feeling
- Judging vs. Perceiving

The major fallacy is to think that you can change people. We are build
in a way that various parts of our brain, which are old and very
straightforward are hardwired to some reactions. It is called a
*lizard logic* and it is related with survival instinct - in order
words *fight or flight*. You can observe that e.g. on the meeting when
people pushed to some stressful situation are defending themselves and
trying to attack the others. Moreover, some of people are *marking
terrain* as the alpha male used to do - that is our nature.

What you should do instead, you should be aware of differences and use
them wisely. Moreover, you should meet and talk with people that have
the opposite personality type than yours in order to learn and observe
how you both should cooperate. You with your personality type has
influence to your communication and vice versa.

Mine personality type (after doing test) is:

INTJ

- 67% more introvert than extrovert.
- 12% more intuitive than sensing.
- 25% more thinking than feeling.
- 22% more judging than perceiving.

**** Details of INTJ

- Defined
- From the outside looks self confident.
- Know what they know, and they know what they don't know.
- Perfectionist
- Applying pragmatism to the all areas of life.
- Independent
- Questioning Authorities
- Grateful and aware of individual contributions.
- Implements critical decisions without consulting them with
  superiors.
- Reliable
- Extremely Private
- Caring and willing to spend time with small group of selected
  people.
- Sucks at romantic relationships, because their knowledge is hard to
  apply in non-rational parts.
- They have introverted intuition.
- They have extroverted thinking.
- They have introverted feeling.
- They have extroverted sensing.

*** "Hardware Bugs"

There is a syndrome called *Lizard's Logic*. There is a part of your
brain which is responsible for all primitive instincts and
subconscious behaviors. It enables under stress or when someone
threats your life. It also disables the creative and rational mode -
only survival instinct matters.

Often you can observe that on the meetings, in the group of people, on
the road (very common *road rage*). And remember, your emotions
influences the environment (especially negative ones) and vice
versa. Behave yourself and choose proper environment to work
in. Positive attitude increases the comfort in working environment.

You are the evolved one - don't rush, step out, count to 10, breath
out, breath in, step in again and respond. Moreover, don't hiss - fix
it. Instead of spending time on whining, try to improve it without
arguing about it.

Trust your intuition, it is an awesome thing, but verify it. Prove
it. Don't rely on it in 100%. Test, create, benchmark, sense the
solution, feel it and play with it in order to see how it behaves and
how really looks like. Expectations color your ideas.

* Learning

** Process of Learning

- Learn deliberately!
  - Learning is a process, that you *do*, it isn't done to you.
  - Random target, random results.
  - Mastering knowledge alone, without experience isn't effective.
- Education (lat. **educare**) means *led out* not *pour in*.
- Avoid *sheep dip training*.
  - Way of cleaning sheep by dropping them into alien, toxic tank and
    dunking them until they're clean.
  - Lots of corporate courses looks like this. Why? It is easier to
    manage, proceed, prepare and find them.

** SMART Goals

- S - Specified, exact, detailed, well-defined goals.
- M - Measurable, small, iterative and incremental, easy to quantify.
- A - Achievable, by me.
- R - Relevant, for me.
- T - Time-boxed, with deadline.

In this way you are defining not only the goal, but the path to the
goal as well. Remember about context:

- Family
- Business
- Financial
- Community
- Environment

** Pragmatic Investment Plan

- **Have a concrete plan** - plan your short-term goals, for the next
  year, for the next 5 years. More important from plans is the
  planning, because plan can be adjusted, but the process brings you
  the answers.
- **Diversify** - Choose different areas to invest in,
  consciously. Consider the risk and the *ROI* (e.g. choosing .NET or
  Java is a very safe, in terms of work and the pragmatism, but also
  not so much rewarding option). All knowledge investments have value,
  even if it is not direct commercial value, used on-the-job. You are
  enhancing your *R-mode* and *L-mode* this way.
- **Active, not passive investment** - Use the continuous
  feedback. Evaluate and measure results, if something is not giving
  expected results, change it adapt. Rinse, repeat.
- **Invest regularly** - Be regular with your deliberate learning, do
  not wait for muse to happen, schedule a time e.g. once a week, do it
  regularly. Create a ritual, escape and isolate. Focus, prepare and
  plan everything before, remove obstacles and interrupts.

** Learning Modes and Different type of Intelligence

Different brain *flavors* and ways of learning.

- Kinesthetic - active, DIY work, dance, movement, playing with
  form. Molding, sculpting, touching.
- Audible / Musical - listening, hearing, recognizing lyrics, sounds
  and music patterns. Rhythm, patterns, frequency, tone.
- Visual / Spatial - looking, drawing, sketching, visual guides,
  painting. Spatial way of recognizing things, imagination.
- Linguistic - storytelling, talking, arguing, wordplay, presenting.
- Intrapersonal - self-reflective, introvert-like personality, closed
  one, focused and directed to the inside. Philosophical, reflective.
- Interpersonal - empathetic, talk, conversations, listening in then
  group. Extrovert, likes people. Inventor, discoverer.
- Logical / Mathematical - math, geometry, symbols, taxonomies,
  science. Symbolic reasoning. Linear, sequential.

Mine (the most common for me):
- Audible - I like podcasts, listening music, isolate from the noise.
- Linguistic - I like to talk, argue, speaking out loud often brings
  the solution.
- Intrapersonal - I like to think by myself about solution, reflection
  came afterwards.

*** What about IQ tests?

There are studies that confirms some problems
with the simple IQ test and classifying people only by single number.
Some of people can be easily omit by these kind of tests and they are
creative and very intelligent, in different way that the tests author
assumed. There are scientific research that intelligence is a
composite thing, that cannot be measured by a single number.

Any kind of fixed personality type is not written in stone - it is a
default, you can change it, adapt. You need to discover how you learn
the best, and then apply completely different techniques in order to
create new pathways in brain, increase your capabilities.

** Groups

A study group is a great alternative to the alien, toxic, sheep dip
experience (e.g. reading groups). It may require getting out of
comfort zone, especially if you are an introvert, but it is a
rewarding experience.

The most important lesson from such meetings is the cooperation,
critiques, valuable conversation and life-related examples, instead of
plain and theoretical topics.

** Other Tricks

*** Read Deliberately with SQ3R

Reading is the least effective technique of learning, because of our
natural capabilities (parts of brain responsible for talking and
linguistic processes is smaller than rest), but you can boost it up by:

- Survey - Scan the *ToC* and chapter summaries for an overview.
- Question - Note any question that you have.
- Read - Read in its entirety.
- Recite - Summarize, take notes, rephrase.
- Review - reread, expand and review notes with colleagues.

Besides reading, do not forget about experimentation.

*** Mind Maps

Invented by *Tony Buzan*, it is a sort of two-dimensional, organic,
and holistic outline. You should start from the center of the paper,
draw lines from this main point to the subheadings and subtopics, on
both sides. Play with colors, form, arrows, lines and so on. Paper has
unlimited editing and drawing capabilities, more advanced than any
graphic program.

It is a way of making notes with *R-mode*, and you should do it
regularly, not only with *L-mode*. You can combine previous technique
(SQ3R) with *mind maps*. This kind of mapping is really helpful when
you are dealing with researches and many unknowns (*exploratory mind
maps*).

*** Learn by Teaching

- Do a podcast.
- Do a screen-cast, video.
- This kind of learning, put emphasis on multiple ways how and what
  should I learn first about that topic.
- *Talk to the duck* or in other words *See it. Do it. Teach it*.

* Experience

Experiencing new things is the most effective way to build knowledge
and habits. But doing it in a *fun* way is a key. Play is everything,
engagement is key to remembering, brain is build in a way that memory
is located near the areas responsible for pleasure and pain.

The same approach took the creators of LOGO programming language
(children learn math, programming and robotics better by sensing and
doing, and by fun) and LEGO Mindstorms. Moreover, there are no dumb or
smart people - and you can easily see this on children, every single
children is a perfect learner.

What else can emphasis the impact is *anthropomorphism*, putting
yourself inside the actual problem, action as a main character.

In other words, you should find the problem / technology / new thing
to learn, then play with it by trying, building on the playground and
after that you can learn theory and blocks. In this order you will
more effectively learn and remember.

Learn from similarities, unlearn from differences. *I don't know* is a
good start! But you have to push it through.

** Safe Environment

For experimentation safe environment is a key thing. The best
environment is that one which has safety nets (easy, automated way to
test things), time machine (you can step back in time and verify your
assumptions and hypothesis) and it is safe, without pressure.

** Inner Game

The very important concept related with learning is the *discovery*
and *awareness* - *the inner game* (based on book *The Inner Game of
Tennis* and then moved to the other areas e.g. Music, Skiing and so
on).

The idea is to show completely newbie how to increase *awareness* -
instead of pumping up the theoretical knowledge, learner should focus
on observing the master, repeating and learning by discovery.

That will increase intensity, it will introduce tight, and auto aware
feedback loop. See without judging and then act.

Moreover this idea is not only fixed to the kinesthetic activities. It
can be easily adjusted to the typical programming-related
things. Increase awareness, listen to the inner voice of experience
and feedback.

One of the things that can kill it is **pressure**. Trying fails,
awareness cures. You should grant permission yourself to fails. But
trying too hard is a guarantee for failure. Deadline kills creativity,
and moreover it can introduce a sensation called a *pressure hangover*
which lasts two days after the deadline phase. *R-mode* it totally
shut out, and *L-mode* handles the time critical tasks.

Permission to fail eases the pressure, and helps releasing the brain,
by involving the *R-mode* and unlocking the bus. What is even more
important - if you give yourself permission to fail, you will end up
with success. You will unlock the *R-mode* and it will help shut down
the overactive *L-mode*.

You can compare inner game to the emotions in movies, books, memories
(good or bad). It is especially visible if you are an emotional
person. Everything related with these things play totally in your
head.

Another thing - Be and act like an expert. Even if you don't just play
and act, prepare yourself a plan when you fail, let yourself fail, but
the attitude and way of thinking really changes everything.

* Focus

It is hard to focus in our times. But the very first rule related with
focusing again, is quieting the *inner idle loop* related with very
chatty *L-mode*. If you are not busy and unfocused you are starting to
think about stupid things (e.g. *What should I do tomorrow on
dinner?*). You need to silence this voice, unlock the bus for other
parts of brain. Pay attention and train it like a muscle. Relax,
focus, no distractions, no chatter. *Learn to pay attention*.

In order to increase attention span, improve the focus, you can
practice mindful meditation. You should do it regularly, at the same
time, with the same amount - in quiet and peace.

Allocate part of a day for that (e.g. 20 minutes), close your eyes,
take couple of deep breaths, quiet inner thoughts, focus on the
breathing and machinery related with it. You can start even easier by
doing a couple deep, mindful breaths in quiet place, in your breaks,
before meetings or so. There are apps which are helping with that -
*Mindspace*.

Sometimes it is not obvious than ideas have to ferment, percolate,
marinade. It means that in the background some ideas are checked by
*R-mode* in a various ways that you can't even imagine.

Very good idea is to think about three ways a plan can go wrong or
think of three different solutions to a problem (*Rule of Three*), you
need to formalize them briefly, consciously but after they can be
processed in the background. After a while they will appear again in
consciousness - confirmed, tested, verified or not. Just let them grow
and ripen. Make room for *thinking time*.

Some people have problem with that, they are thinking that it is a
procrastination. There is a slight difference between thinking time
and procrastination - if you are stuck, and your potential solutions
need to be rethought it is not *slacking* but *thinking* time. If you
are avoiding work because you don't want to do it, there is more
likely to be a diversion and procrastination. In other words - do
nothing, deliberately, let the minds *marinate* and *stew* (*defocus
to focus*).

* Managing the Knowledge

Exocortex is a concept gathered from AI development teams and
neuroscientists, which are defining an artificial and external memory
in such way. As a programmers (and more generally - people which are
working with expertise like knowledge level) we should train, garden
and develop such Exocortex, because memory should be refreshed
periodically, and *every read is a write*.

Process of gathering, rephrasing and gardening knowledge is really
helpful. At first you should have some kind of notebook, scribble book
with you - everywhere, anytime, but after the initial *dump* you should
rethink that, clean up and rephrase in more structured and formal way
e.g. in the *org-mode* or Wiki.

These kind of structured notes are helpful, because they are extending
the memory, they increasing the actual capabilities by releasing the
brain from the easily looked up or cumbersome details. You should not
waste your cells to something which can be easily picked up from an
external source (e.g. metrics, good patterns).

You should know where to look, so the searching capabilities and
structure are crucial. External support (and other visualization
techniques) are part of your brain.
* Context

As a first thing, you need to be aware that all bad habits and
previous attitude to this can be changed, but it requires time. You
need to be focused and engaged in this process deliberately and fully
aware. Don't afraid to fail.

Avoid *context-switching* at any cost, there are two values which are
measured in researches about that topic - *interrupt lag* and
*resumption lag*. Both of them, summed up, are around 20-30 minutes,
for single interruption. It means that a significant part of your day
wasted because of that (20-40% of whole day).

Plan your day and fix your desk, area around you and daily work-flow
in order to reduce that. Less frequent checking will help in that, do
not poll email, IM clients minute by minute. Scan your input queues
(important notion from the *GTD* methodology) once, if something can
be done in 2 minutes, do it and reduce the queue. Stick to the one
queue, and one only, reduce jumping between the TODO lists.

*Mask* the necessary interruptions, by introducing *do not disturb*
signs (IM, room). Asynchronous communication is awesome, because you
can setup your own pace and tempo for it.

Work spaces and multiple monitors for the rescue - what is out of your
sight is less distracting for you. Music also can help improving
focus. Agree on common interruptions mechanism in your office.

Prepare yourself to be interrupted, save the context (paper, TODO
lists). Do it regularly, save the breadcrumbs which helps afterwards
resume your context.

Some interruptions are more *context-friendly* than others, e.g.:
- Making notes.
- Mindless walk without conversation with others.
- Marinating (*thinking time*).

And one more thing - avoid the *apnea* - really short, shallow or even
suspension of breathing. It is common when debugging, reading emails
and so on. It enables the *lizard brain* mode, our flight or fought
mechanisms, it is also unhealthy and influences our reactions to
certain situations. Are you nervous? Observe yourself, watch what
happened in stressful situations and be sure that you are not doing
something like this.

* Beyond the expertise

Practice make the permanent. Change is always harder than it
looks. You have to be patient, develop your habits and work with your
negative side.

Suggestions, how to do it in the best possible way:
  - Make a plan, and stick to it.
  - Inaction is an enemy, not error. Don't afraid of making mistakes.
  - New habits take time. Be patient.
  - Belief is real.
  - Take small, next steps. One bite at a time.

Every single habit and work in that matter will be hard. There is a
huge *inertia* in your brain.

You are going into the expertise one step at a time, but remember that
*the professional kiss of death for an expert is to act like one*. In
the expert's mind there are only few options, in the beginners mind -
many more. Be always a beginner, think like a child, be *hungry*,
verify and be *foolish*.
